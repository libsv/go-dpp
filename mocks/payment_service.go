// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"github.com/libsv/go-dpp"
	"sync"
)

// Ensure, that PaymentServiceMock does implement dpp.PaymentService.
// If this is not the case, regenerate this file with moq.
var _ dpp.PaymentService = &PaymentServiceMock{}

// PaymentServiceMock is a mock implementation of dpp.PaymentService.
//
// 	func TestSomethingThatUsesPaymentService(t *testing.T) {
//
// 		// make and configure a mocked dpp.PaymentService
// 		mockedPaymentService := &PaymentServiceMock{
// 			PaymentCreateFunc: func(ctx context.Context, args dpp.PaymentCreateArgs, req dpp.Payment) (*dpp.PaymentACK, error) {
// 				panic("mock out the PaymentCreate method")
// 			},
// 		}
//
// 		// use mockedPaymentService in code that requires dpp.PaymentService
// 		// and then make assertions.
//
// 	}
type PaymentServiceMock struct {
	// PaymentCreateFunc mocks the PaymentCreate method.
	PaymentCreateFunc func(ctx context.Context, args dpp.PaymentCreateArgs, req dpp.Payment) (*dpp.PaymentACK, error)

	// calls tracks calls to the methods.
	calls struct {
		// PaymentCreate holds details about calls to the PaymentCreate method.
		PaymentCreate []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Args is the args argument value.
			Args dpp.PaymentCreateArgs
			// Req is the req argument value.
			Req dpp.Payment
		}
	}
	lockPaymentCreate sync.RWMutex
}

// PaymentCreate calls PaymentCreateFunc.
func (mock *PaymentServiceMock) PaymentCreate(ctx context.Context, args dpp.PaymentCreateArgs, req dpp.Payment) (*dpp.PaymentACK, error) {
	if mock.PaymentCreateFunc == nil {
		panic("PaymentServiceMock.PaymentCreateFunc: method is nil but PaymentService.PaymentCreate was just called")
	}
	callInfo := struct {
		Ctx  context.Context
		Args dpp.PaymentCreateArgs
		Req  dpp.Payment
	}{
		Ctx:  ctx,
		Args: args,
		Req:  req,
	}
	mock.lockPaymentCreate.Lock()
	mock.calls.PaymentCreate = append(mock.calls.PaymentCreate, callInfo)
	mock.lockPaymentCreate.Unlock()
	return mock.PaymentCreateFunc(ctx, args, req)
}

// PaymentCreateCalls gets all the calls that were made to PaymentCreate.
// Check the length with:
//     len(mockedPaymentService.PaymentCreateCalls())
func (mock *PaymentServiceMock) PaymentCreateCalls() []struct {
	Ctx  context.Context
	Args dpp.PaymentCreateArgs
	Req  dpp.Payment
} {
	var calls []struct {
		Ctx  context.Context
		Args dpp.PaymentCreateArgs
		Req  dpp.Payment
	}
	mock.lockPaymentCreate.RLock()
	calls = mock.calls.PaymentCreate
	mock.lockPaymentCreate.RUnlock()
	return calls
}
